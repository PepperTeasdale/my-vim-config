" Mappings ------- {{{
inoremap jk <esc>
nnoremap + ddkP
nnoremap - ddp
inoremap <c-u> <esc>viwUea
inoremap <c-v> <c-r>"
" Open this file in a new pane
nnoremap <leader>ev :vsplit ~/.vimrc.local<cr>
" Highlight trailing whitespace
nnoremap <leader>w :match Error /\v\s+$/<cr>
nnoremap <leader>W :match Error ""<cr>
" Always search in very magic mode (ie normal regex)
nnoremap / /\v
nnoremap <leader><space> i<space><esc>l
" Search for current word with silver searcher
nnoremap <leader>G :Ag<cr>

" Toggle booleans
nnoremap <leader>! :call ToggleBoolean(expand("<cword>"))<cr>

function! ToggleBoolean(bool)
  if a:bool ==# 'true'
    execute "normal! ciwfalse"
  elseif a:bool ==# 'false'
    execute "normal! ciwtrue"
  endif
endfunction
" }}}
" Abbreviations ------- {{{
iabbrev funciton function
iabbrev fucniton function
" " }}}
" Ruby abbeviations ------- {{{
augroup filetype_ruby
  autocmd!
  autocmd FileType ruby :iabbrev <buffer> debugger binding.pry
augroup END
" }}}
" Python abbreviations ------- {{{
augroup filetype_python
  autocmd!
  " copy the name of the current module to clipboard (relative to pwd)
  if has("mac") || has("gui_macvim") || has("gui_mac")
    autocmd FileType python :nnoremap <silent> <leader>P :let @*=join(split(expand("%:r"), "/"), ".")<CR>
  endif
  if has("gui_gtk") || has("gui_gtk2") || has("gui_gnome") || has("unix")
    autocmd FileType python :nnoremap <silent> <leader>P :let @+=join(split(expand("%:r"), "/"), ".")<CR>
  endif
augroup END
" }}}
" Vimscript file settings --------- {{{
augroup filetype_vim
  autocmd!
  autocmd FileType vim setlocal foldmethod=marker
augroup end
" }}}
" General -------- {{{
set noswapfile
nnoremap <silent> <Leader>c :let @+ = expand("%")<CR>
nnoremap <silent> <Leader>C :let @+ = expand("%") . ":" . line(".")<CR>

if has('gui_running')
  if getcwd() =~ '/backend-python'
    colorscheme atom
  elseif getcwd() =~ '/apps/react'
    colorscheme molokai
  endif
endif
" }}}
